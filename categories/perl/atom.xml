<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: perl | KABLAMO]]></title>
  <link href="http://blog.kablamo.org/categories/perl/atom.xml" rel="self"/>
  <link href="http://blog.kablamo.org/"/>
  <updated>2013-11-22T22:14:38+00:00</updated>
  <id>http://blog.kablamo.org/</id>
  <author>
    <name><![CDATA[Eric Johnson]]></name>
    <email><![CDATA[kablamo@kablamo.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Devops with Rex]]></title>
    <link href="http://blog.kablamo.org/2013/11/22/rex/"/>
    <updated>2013-11-22T00:00:00+00:00</updated>
    <id>http://blog.kablamo.org/2013/11/22/rex</id>
    <content type="html"><![CDATA[<p>I have recently been playing with <a href="http://www.rexify.org/">Rex</a> and wanted to
write down some of my initial thoughts.</p>

<p>Rex is a devops tool that helps you manage your servers.  Its similar to
Puppet Lab&rsquo;s <a href="http://puppetlabs.com/mcollective">mcollective</a> tool or
<a href="http://www.ansibleworks.com/docs/">ansible</a>.  You can easily run commands on
your entire fleet of boxen or just on certain subgroups.  And you can run
them in parallel which saves you giant baskets of time.</p>

<p>The big advantage for People Who Prefer Perl (PWPP) is that Rex is written and
configured with Perl. So for the most part you don&rsquo;t need to spend a lot of time
learning yet another DSL.</p>

<p>Another happy positive is that you don&rsquo;t need to install any software on your
servers. Installation is simple:</p>

<pre><code>$ apt-get install libssh2-1-dev
$ cpanm Rex
</code></pre>

<p>Configuration is also simple &mdash; at least if you know Perl.  The
Rex configuration file is named &lsquo;Rexfile&rsquo; and its syntax is Perl with some
extra Rexy sugar methods thrown in. And I feel the sugar and general API for
Rex is fairly well done.  Here is an example Rexfile:</p>

<pre><code># Configure the default user and your ssh keys.  The default user can be
# overridden on the command line with the -u option.
user "joe";
private_key "/home/joe/.ssh/id_rsa";
public_key "/home/joe/.ssh/id_rsa.pub";
key_auth;

# Cofigure server groups
group prod =&gt; "webserver", "mailserver", "dbserver";
group dev  =&gt; "pancake[1-3]", "narwhale[1-3]", "honeybadger[1-3]";

# Run commands in parallel on up to 100 servers at one time.  This can be
# overridden on the command line with the -t option.
parallelism 100;

# Create tasks.  This task runs against all servers by default.  This can
# be overridden on the command line with the -G or -H options.
task 'uptime', group =&gt; 'all', sub {
    my $output = run "uptime";
    say $output;
};
</code></pre>

<p>You can see that Perl&rsquo;s &lsquo;say&rsquo; command is available by default.  &lsquo;run&rsquo; is a Rex
sugar method which accepts a shell command and returns the output &mdash; similar
to Capture::Tiny.</p>

<p>Here is a command line example which runs the &lsquo;uptime&rsquo; task as the &lsquo;root&rsquo; user
on each server in the &lsquo;dev&rsquo; group:</p>

<pre><code>$ rex -G dev -u root uptime
    pancake1:  16:42:05 up 221 days,  9:49,  1 user,  load average: 0.00, 0.00, 0.00
   narwhale2:  16:42:05 up 8 days,  3:28,  4 users,  load average: 0.00, 0.00, 0.00
   narwhale3:  16:42:05 up 17 days,  3:57,  2 users,  load average: 0.01, 0.01, 0.00
honeybadger1:  16:42:05 up 80 days,  3:29,  1 user,  load average: 0.09, 0.06, 0.01
    pancake3:  16:42:05 up 137 days,  7:49,  1 user,  load average: 0.00, 0.00, 0.00
   narwhale1:  16:42:05 up 65 days,  5:30,  2 users,  load average: 0.46, 0.41, 0.37
honeybadger3:  16:42:04 up 15 days,  4:49,  1 user,  load average: 2.00, 2.00, 2.00
    pancake2:  16:42:04 up 1 day,  2:23,  3 users,  load average: 1.38, 1.35, 1.30
honeybadger2:  16:42:05 up 39 days,  1:24,  1 user,  load average: 0.08, 0.06, 0.01
</code></pre>

<p>Rex is fantastic for ad-hoc commands.  But it also has a great set of libraries
for doing much more like installing debian packages, user management,
virtualization, and managing EC2 boxes.  I have to say I&rsquo;m deeply attracted to
its simplicity &mdash; especially after dealing with Puppet&rsquo;s complicated and weird
DSL.</p>

<p>If anyone uses Rex to manage more than 50 servers, I would love to get in touch
with you and ask a few questions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Down a rabbit hole - Go-lang and its decentralized CPAN]]></title>
    <link href="http://blog.kablamo.org/2013/11/13/go/"/>
    <updated>2013-11-13T00:00:00+00:00</updated>
    <id>http://blog.kablamo.org/2013/11/13/go</id>
    <content type="html"><![CDATA[<p>I have been in a rabbit hole for the last week.  I started by looking at Docker
(<a href="http://blog.kablamo.org/2013/11/13/docker/">See my previous post</a>).  It turns
out Docker is written in Go and so somehow I ended up learning
<a href="http://golang.org/">Go</a>.  Well &ldquo;learning&rdquo; is an overstatement.  I&rsquo;ve read
about it for a few days and wrote a tiny bit of code.</p>

<p>But anyway, the coolest thing about Go so far is its decentralized libraries.
<em>Centralized</em> collections of libraries have been all the rage the last few years
and it seems like all the languages have gotten hip to that &mdash; CPAN, rubygems,
pypi, npm, etc.</p>

<p>But one of the biggest problems with publishing Perl modules on CPAN is how
difficult it is to do.  Sure its easy after you figure out the PAUSE website
exists, create a PAUSE account, read all the Dist::Zilla docs and some of the
source code, and write your own personalized plugin.  After that it just takes
one little command.</p>

<h1>How it works in Go</h1>

<p>If you want to use some libraries in your Go code, it looks like this:</p>

<pre><code>import (
    "log" 
    "time"
    "errors"
    "github.com/dotcloud/docker"
    "github.com/fsouza/go-dockerclient"
)
</code></pre>

<p>The first 3 are core libraries distributed as part of Go.  But the last two you
have to download and install yourself.  Doing that is very simple:</p>

<pre><code>export GOROOT=$HOME/go
go get github.com/dotcloud/docker
</code></pre>

<p>This downloads all the dependencies too.  Of course.</p>

<p>The next question you will ask me is how do people learn about new libraries in
a decentralized world?  There are websites like
<a href="http://gowalker.org/">http://gowalker.org/</a> which scrape GitHub&rsquo;s recent updates
page.  They also do this for BitBucket, Google Project Hosting, and a couple
other sites.</p>

<p>This new language has shiny modern features and is very easy to get up and
running.</p>

<pre style="font: 4px/2px monospace; color: #333; background: transparent; border: 0px; border-radius: 0; box-shadow: 0 0 0 0;">
                              ,'#@@@@@@@#+';;;''#@@@@@#,                            
                          ;@@@@#;.                    '@@@;                         
                       ;@@@:                             ,@@@                       
                     #@@.                                   +@@                     
                   @@+                                        +@;   +@@@@@#         
         ,,      +@+                               #@@@@+       @@@@#  @@       
     .@@@@@@@@' @@      .+@@@+.                 :@        @,     @@         @@      
    @@:      .@@;     ++       #+              @            @     #@         @@     
   @@         @;               @            @              @     @@         @     
  ;@         @#    ,:             '        @                @     @' :    #+    
  @         +@     ;               '        ;                  ,     @@@@;    ,@    
  @      '' @     @                 @       #                  @     '@@@@     @    
 :@     @@@@:    :                   .     ,                          @@@@     @    
 ;#     @@@@     @                   @     #  +@@@:             +     ,@@     ,@    
 :@     @@@    : ,@@@@             +     @ #@@@@@:            @      @    @;    
  @     .@@     @@@@@                  @ @@@@@@@            @      :@     @     
  @      @,     . @@@@@@@                  @ @@@@@:@            @       @    @:     
  ;@     @      . @@@@@.@.                 @ @@@@@            #       #' .@'      
   @@   '#       @@@@ ,            :     ; ,@@@@@             :       @@.       
    @@. @.       # @@@@@'            @      ;  #@#             :         @:         
     ,@@@        @  '@#.             +      @                  @         @:         
       .@         :                 '        @                '          :@         
       '#         +                 ;         '              .,           @         
       @:          @               @  @@@@@@,  @            ;,            @         
       @          @             @  @@@@@@@@.  @:        .@              @,        
       @             ;+         #,  #@@@@@@@@'    +@+::+@#                ++        
       @               ;@;,.,'@:    @@@@@@@@@@:                           :@        
       @                          #, ,@@@@@@   @                           @        
      .@                         @              '                          @        
      ;#                                       @                         @        
      ++                        :                ;                         @        
      +'                                         '                         @        
      #:                         @    ;@;@'@     @                         @      
      @,                          :+''   @  .@@@:                          @.       
      @,                                 @   :                             @.       
      @.                            ,    @   .                             @,       
      @,                            ;    @                                 @,       
      @,                            '    @                                 @:       
      #:                            :    @                                 @:       
      #;                             +  @ :  @                             @:       
      ++                              +;   ;.                              @:       
      ;#                                                                   @:       
      ,@                                                                   @:       
       @                                                                   @:       
       @                                                                   @,       
       @                                                                   @,       
       @                                                                 @,       
       @,                                                                  @,       
       +'                                                                  @,       
       :@                                                                  @:       
       .@                                                                  @:       
        @                                                                  @:       
        @                                                                  #;       
        @                                                                  #;       
        @                                                                  +@@,     
      '#@                                                                  '+  ;@.  
   +@.  @                                                                  '#     @ 
 ';     @                                                                  ;@      @
.       @                                                                  :@      #
@       @                                                                  ,@    @ @
+ @  ,@                                                                  .@@    # 
 @    ':@                                                                   +; .+ 
 ,.  @ .@                                                                   @     
   ;   .@                                                                   @       
       ,@                                                                   @       
       :@                                                                   @       
       ;#                                                                   @       
       '#                                                                   @       
       '+                                                                   @       
       +'                                                                   @       
       #;                                                                   @       
       #;                                                                   @       
       @:                                                                   @     
       @:                                                                   @.      
       @,                                                                   @,      
       @,                                                                   @,      
       @,                                                                   @,      
       @,                                                                   @,      
       @.                                                                   @.      
       @.                                                                   @     
       @.                                                                   @       
       @.                                                                   @       
       @,                                                                   @       
       @,                                                                   @       
       @,                                                                  .@       
       @,                                                                  '#       
       @:                                                                  @:       
       @:                                                                  @        
       #;                                                                  @        
       +'                                                                 ,@        
       '+                                                                 #'        
       ,@                                                                 @         
        @                                                                         
        @.                                                               @'         
        ;@                                                               @          
         @                                                              +@          
         '@                                                             @           
          @,                                                           #@           
          .@                                                           @            
           #@                                                         @:            
            @#                                                       @#             
             @+                                                     @@              
              @#                                                  .@@               
               @@@#                                              @   .#             
             ''    #                                            @      @            
            @       @                                          @        '           
           @         @                                       @@+        ;           
          :   .       @+                                  :@@+  +.    @  +          
          @  @      @, #@@;                            ;@@@,     ;    .  @          
          ' @     ':     ,@@@#:                   :+@@@@:         #    @ @          
          @ :    #           ;@@@@@@@#####@@@@@@@@@+.              @   ; .          
           @    @                  ,:;''';;:,                     @  #,           
            ;@##                                                     `             
</pre>


<p>(the golang mascot)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git-vspark plots your commits vertically with Term::Vspark]]></title>
    <link href="http://blog.kablamo.org/2013/03/17/git-vspark/"/>
    <updated>2013-03-17T00:00:00+00:00</updated>
    <id>http://blog.kablamo.org/2013/03/17/git-vspark</id>
    <content type="html"><![CDATA[<p>I added a <strong>git-vspark</strong> script to my App::Git::Spark CPAN module.  It does the
same thing as <a href="https://github.com/kablamo/git-spark">git-spark</a> but instead of
normal horizontal sparklines, it uses &ldquo;vertical&rdquo; sparklines.  Here&rsquo;s what that
looks like:</p>

<pre><code>$ git vspark --months 8 batman
Commits by batman over the last 8 months
total: 233   avg: 29   max: 69
 12 ██▋
 18 ████
 69 ███████████████▏
 59 ████████████▉
 16 ███▌
 28 ██████▏
 12 ██▋
 19 ████▎
</code></pre>

<p>This effect is achieved using
<a href="https://metacpan.org/module/Term::Vspark">Term::Vspark</a>.  Its companion module
<a href="https://metacpan.org/module/Term::Spark">Term::Spark</a> is a small pure Perl
replacement for Zach Holman&rsquo;s original <a href="https://github.com/holman/spark">spark</a>
implementation and it now powers my git-spark script.</p>

<p>These libraries were fun little projects developed over the past few weeks
mainly by <a href="https://github.com/LuRsT">Gil Gonçalves</a> with a few pull requests
from myself.  Having them available on CPAN means you can easily use sparklines
in your own Perl code.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chinese zombie flashcards on GitHub (Catalyst & Perl)]]></title>
    <link href="http://blog.kablamo.org/2013/02/28/chinese-flashcards/"/>
    <updated>2013-02-28T00:00:00+00:00</updated>
    <id>http://blog.kablamo.org/2013/02/28/chinese-flashcards</id>
    <content type="html"><![CDATA[<p>There seem to be quite a few Perl people learning Chinese so maybe this will be
relevant here.</p>

<p>I created <a href="http://iijo.org">IIJO</a> which is a Perl powered website that does 3
sided flashcards (Chinese, English, and Pinyin).</p>

<p>The main advantage IIJO has over Anki and other flashcard sites is that you can
pick your flashcards from a dictionary so you don&rsquo;t have to type all that stuff
in yourself.   It allows you to share word lists with others and the built in
dictionary means that you don&rsquo;t need to worry about the accuracy and
completeness of other people who share wordlists.</p>

<p>The site does <a href="http://en.wikipedia.org/wiki/Spaced_repetition">spaced repetition</a>
like Anki.  But it has a different simpler user interface because Anki&rsquo;s 4
buttons after each flashcard <em>stresses me out.</em></p>

<p>If you want, you can just play with the <a href="http://iijo.org/dictionary">Chinese/English dictionary</a>.<br/>
The goal here is to be able to look up a word then add it easily to one of your
existing word lists.</p>

<p>If you think there is something missing, check out the project on
<a href="http://github.org/kablamo/iijo.org">GitHub</a> and send me a pull request.  I&rsquo;m
using Perl, Catalyst, and SQLite.</p>

<p>Here are some of the things on my todo list:</p>

<ul>
<li>More analytics/stats/data for measuring progress using D3</li>
<li>Speech/pronunciation samples</li>
<li>Export to Anki</li>
<li>Some way to learn phrases instead of just characters</li>
</ul>


<h1>Vampires and zombies</h1>

<p>Btw, here&rsquo;s an interesting thing I learned about the Chinese language: the word
for <code>vampire</code> is the same word thats used for <code>zombie</code>.</p>

<center><p style="margin-bottom: .5em; font-size: 4em; font-weight: bold;">僵尸</p></center>


<p>This is because the Chinese merged the two concepts into a single vampire
zombie monster.  So Chinese zombies are stiff and walk around with their hands
straight out.  But they also bite their victim&rsquo;s necks and suck their blood
passing on the zombie infection.</p>

<p>They are also fast and angry and they often do kung fu.  You can&rsquo;t
kill them of course, however you can put them to sleep if you write a spell on a
yellow piece of paper and put it on their forehead.  But if it falls off, they
wake up and get angry again.  Strangest of all is that they do little
hops like bunnies instead of walking.</p>

<p>I highly recommend Liao Yiwo&rsquo;s book, <a href="http://www.amazon.com/The-Corpse-Walker-Stories-Bottom/dp/0307388379/ref=sr_1_1?ie=UTF8&amp;qid=1362603639&amp;sr=8-1&amp;keywords=corpse+walker"><em>Corpse Walker,</em></a>
which tells the fascinating history and origin of Chinese zombies.  You can read more
about jiangshi on <a href="http://en.wikipedia.org/wiki/Jiangshi">Wikipedia</a>.  And of
course there are YouTube videos:</p>

<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/56Zvquhww80" frameborder="0" allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dist::Zilla::PluginBundle::DAGOLDEN is pretty awesome]]></title>
    <link href="http://blog.kablamo.org/2013/02/20/how-to-learn-dist-zilla/"/>
    <updated>2013-02-20T00:00:00+00:00</updated>
    <id>http://blog.kablamo.org/2013/02/20/how-to-learn-dist-zilla</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been using <a href="https://metacpan.org/module/Dist::Zilla">Dist::Zilla</a> for a
couple years.  It&rsquo;s a powerful way to automate CPAN releases.</p>

<p>But learning how to use it was not as easy as I hoped.</p>

<p>I remember when <code>Dist::Zilla</code> first debuted.  It was very exciting.  But I think
I may have drank too much of the cool aid becuase my expectations were very
high when I finally sat down to learn it.  I expected my experience to be
composed entirely of rainbows and puppy dog tails.</p>

<h2>Writing your own dist.ini or PluginBundle is hard</h2>

<p>Instead I found that creating a dist.ini or PluginBundle is fairly hard.  There
are a huge number of plugins and it&rsquo;s difficult for a newcomer to know which
are old, which are new, and how they work together.  If you look, for example,
at <code>Dist::Zilla::PluginBundle::DAGOLDEN</code> it uses 23 different plugins and the
<em>synopsis</em> is 132 lines long.</p>

<p>In retrospect, it was not reasonable to expect I could build something
comparable after a few minutes of perusing the docs.  It&rsquo;s more complex than
that.  So if you are looking to quickly add <code>Dist::Zilla</code> to your toolchain, you
need to use a PluginBundle and not write your own.</p>

<h2>How to quickly add Dist::Zilla to your toolchain</h2>

<p>One way is to just use <code>Dist::Zilla::PluginBundle::Basic</code>.  But this was not like
the promised land I had been dreaming of.  I wanted more.  So I kept looking.</p>

<p>Happily, there is a PluginBundle which I think works well as a reusable
component suitable for public consumption thats also very configurable.  I
doubt it&rsquo;s well known because the name sounds very personal.  That module is,
of course,
<a href="https://metacpan.org/module/Dist::Zilla::PluginBundle::DAGOLDEN">Dist::Zilla::PluginBundle::DAGOLDEN</a>.</p>

<p>I think the workflow it uses will work for many people.  Even if it
doesn&rsquo;t, reading the code is a great way to learn how to write your own
PluginBundle.  And because it&rsquo;s so comprehensive it&rsquo;s like having a up-to-date
map of the state of the art in <code>Dist::Zilla</code> plugins and how they work
together.</p>

<p>Here&rsquo;s what my dist.ini looks like:</p>

<pre><code>name    = App-Git-Ribbon
author  = Eric Johnson &lt;cpan at iijo dot nospamthanks dot org&gt;
license = Perl_5
copyright_holder = Eric Johnson
main_module = lib/App/Git/Ribbon.pm

[@DAGOLDEN]
no_spellcheck = 1
AutoMetaResources.bugtracker.rt = 0
AutoMetaResources.repository.github = user:kablamo
AutoMetaResources.bugtracker.github = user:kablamo
weaver_config = @FLORA
</code></pre>
]]></content>
  </entry>
  
</feed>
