<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools | KABLAMO]]></title>
  <link href="http://blog.kablamo.org/categories/tools/atom.xml" rel="self"/>
  <link href="http://blog.kablamo.org/"/>
  <updated>2014-04-03T16:25:53-04:00</updated>
  <id>http://blog.kablamo.org/</id>
  <author>
    <name><![CDATA[Eric Johnson]]></name>
    <email><![CDATA[kablamo@kablamo.org]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to find and restore deleted files with git]]></title>
    <link href="http://blog.kablamo.org/2013/12/08/git-restore/"/>
    <updated>2013-12-08T00:00:00-05:00</updated>
    <id>http://blog.kablamo.org/2013/12/08/git-restore</id>
    <content type="html"><![CDATA[<p>Don&rsquo;t be afraid to delete files from your git repository.  You can get restore
them.  You can even search for a string in a deleted file.  Here is how to find
a deleted file and its commit:</p>

<pre><code>git log --diff-filter=D --summary                  # all deleted files ever
git log --diff-filter=D --summary .                # all deleted files in cwd 
git log --diff-filter=D --author=Batman --summary  # all files deleted by Batman
</code></pre>

<p>How to restore a deleted file:</p>

<pre><code>git checkout &lt;commit&gt;~1 &lt;filename&gt;
</code></pre>

<p>To make this process a little easier next time I need to do it, I created a git
alias for finding deleted files by adding this to my .gitconfig file:</p>

<pre><code>[aliases]
deleted = log --diff-filter=D --summary
</code></pre>

<p>Now I can find and restore files like this:</p>

<pre><code>git deleted                         # find a deleted file and its commit
git checkout &lt;commit&gt;~1 &lt;filename&gt;  # restore the deleted file
</code></pre>

<h2>How to search the contents of deleted files</h2>

<p>But lets say I don&rsquo;t remember the filename of that file I deleted in a fit of
cleanup passion.  I do remember the name of one of the functions in it though.
Here is how to deal with that.  Search the contents of all files that have ever
existed in git for a string:</p>

<pre><code>git log --summary -S&lt;string&gt; [&lt;path/to/file&gt;] [--since=2009.1.1] [--until=2010.1.1]
</code></pre>

<p>Another way to do this:</p>

<pre><code>git rev-list --all | xargs git grep 'string'
</code></pre>

<p>Git is all knowing and all seeing and all powerful.  Hail git, powerful arcane
lord of source control.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tmux reloaded]]></title>
    <link href="http://blog.kablamo.org/2013/11/27/tmux-reloaded/"/>
    <updated>2013-11-27T00:00:00-05:00</updated>
    <id>http://blog.kablamo.org/2013/11/27/tmux-reloaded</id>
    <content type="html"><![CDATA[<p>To reload your tmux configuration without restarting the server, add this to
your <code>~/.tmux.conf</code> file:</p>

<pre><code># reload the config file without restarting the tmux server
bind R source-file ~/.tmux.conf \; display-message "Config reloaded"
</code></pre>

<p>Notice thats a capital <code>R</code> not a lowercase <code>r</code>.  I keep forgetting that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configure tmux to give you status updates about anything]]></title>
    <link href="http://blog.kablamo.org/2013/11/26/tmux-status-updates/"/>
    <updated>2013-11-26T00:00:00-05:00</updated>
    <id>http://blog.kablamo.org/2013/11/26/tmux-status-updates</id>
    <content type="html"><![CDATA[<p>I use and love OSX growl and Ubuntu notify style desktop notifications.  They
are gorgeous.  But they are also distracting and after a few vibrant and
whimsical but fleeting seconds they are gone forever and you have no way to get
them back.</p>

<p>A more useful (and less glorious) way to receive notifications is in your
<a href="http://tmux.sourceforge.net/">tmux</a> status bar.  tmux is the brilliant
successor to the venerable screen which hasn&rsquo;t been actively developed for
quite a while.</p>

<p>Here is how I configure notifications in my .tmux.conf file:</p>

<pre><code>set -g status-interval 15    
set -g status-right !exec my_shell_script
</code></pre>

<p>This tells tmux to run <code>my_shell_script</code> every 15 seconds.  It displays the
first line of output from the shell script.  Now I can get unobtrusive status
updates which don&rsquo;t go away. And if I ate a good breakfast, feel rested, and
have the wind at my back I can write some code to log my notifications to a
file so that I don&rsquo;t miss any.</p>

<p>Here are some ideas that might be useful which I might someday do maybe perhaps
possibly:</p>

<ul>
<li>Status updates when someone says your name on irc</li>
<li>Status updates when jenkins tests fail</li>
<li>Status updates when people push code live</li>
<li>Status updates when people merge branches</li>
</ul>


<p>Any other ideas?</p>

<p>Also don&rsquo;t miss the tmux <a href="https://github.com/Lokaltog/powerline">powerline</a>
status bar.</p>
]]></content>
  </entry>
  
</feed>
